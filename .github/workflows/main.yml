name: CI

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      - name: Build docker-compose
        run: docker-compose -f docker-compose.yml up --build -d
        
  
  secret-scan:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2 
        
      - run: |
          mkdir -p logs/
          echo 'app/' > logs/exclude.txt
      
      
      - uses: max/secret-scan@master
        with:
          exclude_path: 'logs/exclude.txt'
  
  sca:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2   
      
      - run: |
          mkdir -p logs/
         
      - uses: actions/upload-artifact@v2
        with:
          name: logs
          path: logs/result.txt   
          
      - name: Pyraider
        run: |
          pip install pyraider
          pyraider check -f app/web/requirements.txt > logs/result.txt
          
      - uses: actions/upload-artifact@v2
        with:
          name: logs
          path: logs/result.json 
  
  test:
    needs: [build, sca]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      - name: Build Image for testing
        run: docker-compose -f docker-compose.yml up --build -d 
        
      - name: Set up Python 3.6
        uses: actions/setup-python@v1
        with:
          python-version: "3.6"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r tests/requirements.txt
        
      - name: Run functional tests
        run: |
          python tests/test_01.py
    
          
      - name: Run path traversal tests
        run: |
          python tests/test_03.py
          
      - name: Run remote code execution tests
        run: |
          python tests/test_04.py
          
  sast:
    needs: [build, sca]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2 
        
      - run: |
          mkdir -p logs/      
      
      - uses: jpetrucciani/bandit-check@master
        with:
          path: '.'
          bandit_flags: '-lll -o logs/output.json -f json'
    
      - uses: actions/upload-artifact@v2
        with:
          name: logs
          path: logs/output.json
